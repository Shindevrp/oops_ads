==== Testing copy ====
Copy of null tree: None
Original single node: 10
Copied single node: 10
After modifying original, copied remains: 10
Original tree (pre-order): 1 2 3 4 5 6 
Copied tree (pre-order): 1 2 3 4 5 6 
After modifying original, copied tree remains (pre-order): 1 2 3 4 5 6 
---------------------------------------
==== Testing replace ====
Replace on null tree, count: 0
Single node (match) replaced count: 1 new value: 50
Single node (no match) replaced count: 0 value remains: 10
Multi-node tree replaced count: 3
Modified tree (pre-order): 1 9 9 3 9 4 
---------------------------------------
==== Testing countNodesAtDepth ====
Null tree, depth 3: 0
Single node, depth 0: 1
Single node, depth 1: 0
Multi-node tree, depth 0: 1
Multi-node tree, depth 1: 2
Multi-node tree, depth 2: 3
Multi-node tree, depth 3 (should be 0): 0
---------------------------------------
==== Testing allSame ====
Null tree allSame: True
Single node tree allSame: True
Uniform tree allSame: True
Non-uniform tree allSame: False
---------------------------------------
==== Testing leafList ====
Null tree leafList: []
Single node tree leafList: [100]
Multi-node tree leafList (expected [9, 3, 7]): [9, 3, 7]
---------------------------------------
==== Testing reflect ====
Reflect null tree remains: None
Before reflect (single node): 5 
After reflect (single node): 5 
Before reflect (pre-order): 1 2 3 4 5 6 7 
After reflect (pre-order): 1 5 7 6 2 4 3 
---------------------------------------
==== Testing condense ====
Condense null tree: None
Condense single node tree (should be unchanged): 10 
Chain tree before condense (pre-order): 1 2 3 
Chain tree after condense (should be a single node): 3 
Mixed tree before condense (pre-order): 10 20 30 40 50 60 
Mixed tree after condense (pre-order): 10 30 40 50 60 
---------------------------------------
